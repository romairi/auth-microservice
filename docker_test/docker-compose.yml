version: "3.5"
services:
# WEB-SERVER
  web_server:
    build:
      context: ./webServer
      dockerfile: ./Dockerfile
      target: build-stage
    ports:
      - "${WEBSERVER_PORT}:${PORT}"
      - "${WEBSERVER_DEBUG_PORT}:${WEBSERVER_DEBUG_PORT}" # debug port node for inspect-brk
    command: npm run debug
    environment:
      - NODE_ENV=dev
      - PORT=${PORT}
      - MICROSERVICE_AUTH_HOST=microservice_auth:${PORT}
      - DEBUG_PORT=${WEBSERVER_DEBUG_PORT}
    volumes:
      - ./webServer:/usr/src/app
    restart: always

# MICROSERVICE-AUTH
  microservice_auth:
    build:
      context: ../
      dockerfile: ./Dockerfile
      target: build-stage
    environment:
      - NODE_ENV=dev
      - PORT=${PORT}
      - MONGO_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_HOST=mongo
      - DEBUG_PORT=${WEBSERVER_DEBUG_PORT}
    command: npm run debug
    ports:
      - "${MICROSERVICE_AUTH_PORT}:${PORT}"
      - "${MICROSERVICE_AUTH_DEBUG_PORT}:${MICROSERVICE_AUTH_DEBUG_PORT}" # debug port node for inspect-brk
    volumes:
      - ../:/usr/src/app
    restart: always
    depends_on:
      - mongo

# MONGO
  mongo:
    image: mongo:latest
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodbdata:/data/db

# ADMIN-MONGO
  admin-mongo:
    image: adicom/admin-mongo
    ports:
      - "${ADMIN_MONGO_PORT}:${ADMIN_MONGO_PORT}"
    environment:
      - PORT=${ADMIN_MONGO_PORT}
      - HOST=mongo
    depends_on:
      - mongo

volumes:
  mongodbdata:
